name: "Vault-Secrets"

jobs:
  build:
    steps:
      - name: Import Secrets
        uses: hashicorp/vault-action@v2.3.1
        with:
        url: https://vault.mycompany.com:8200
        token: ${{ secrets.VaultToken }}
        caCertificate: ${{ secrets.VAULTCA }}
        secrets: |
          secret/data/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
          secret/data/ci/aws secretKey | AWS_SECRET_ACCESS_KEY ;
          secret/data/ci npm_token
      - name: Vault Secrets
        uses: hashicorp/vault-action@v2.3.1
        with:
          url: https://vault.mycompany.com:8200
          token: ${{ secrets.VaultToken }}
          caCertificate: ${{ secrets.VAULTCA }}    
      - name: Vault Secrets
        uses: hashicorp/vault-action@v2.3.1
        with:
          url: https://vault.mycompany.com:8200
          method: approle
          roleId: ${{ secrets.roleId }}
          secretId: ${{ secrets.secretId }}
          caCertificate: ${{ secrets.VAULTCA }}
      - name: Import Secrets
        id: secrets
      - name: Sensitive Operation
        run: "my-cli --token '${{ steps.secrets.outputs.NPM_TOKEN }}'"
        with:
          secrets: |
            secret/data/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
            secret/data/ci/aws secretKey | AWS_SECRET_ACCESS_KEY
            - name: Import Secrets
        id: secrets
        # Import config...
          - name: Sensitive Operation
            run: "my-cli --token '${{ steps.secrets.outputs.foo }}'"
          - name: Another Sensitive Operation
            run: "my-cli --token '${{ steps.secrets.outputs.MY_KEY }}'"
          - name: Import Secrets
          - name: Sensitive Operation
            run: "my-cli --token '${{ steps.secrets.outputs.foo }}'"
          - name: Another Sensitive Operation
            run: "my-cli --token '${{ steps.secrets.outputs.MY_KEY }}'"   
          - name: Import Secrets
            uses: hashicorp/vault-action
            with:
              url: https://vault-enterprise.mycompany.com:8200
              method: token
              caCertificate: ${{ secrets.VAULTCA }}
              token: ${{ secrets.VaultToken }}
              namespace: ns1
              secrets: |
                  secret/ci/aws accessKey | AWS_ACCESS_KEY_ID ;
                  secret/ci/aws secretKey | AWS_SECRET_ACCESS_KEY ;
                  secret/ci npm_token  


   

